/*
  ShinyProbability
  画面の縦横比で崩れます。
  mac版ChromeとiPhone12ProのChromeとOBSは崩れないことを確認。
*/

@charset "utf-8";

html {
  /* ダブルタップでの動作を止める */
  touch-action: manipulation;
  /* height:300pxで16pxと同等。 */
  font-size: calc((16 / 300) * 100vh);
}

body {
  font-family: "Open Sans", "Zen Maru Gothic", "Noto Color remoji", sans-serif;
  font-weight: 700;
  color: #fff;
  text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  font-feature-settings: "palt" 1;

  /* OBSではここの背景色は反映されない */
  background-color: #222;
  width: 100%;
  height: auto;
  margin: auto;

  /*
    画面の中央になるように設定
    環境によって見切れる場合があるので廃止
  */
  /* position: absolute;
  top: 50%;
  left: 50%;
  transform: translateY(-50%) translateX(-50%); */
}

/* scrollbarを非表示 */
body::-webkit-scrollbar{
  display: none;
}

.encounterProbability,
.traials {
  display: flex;
  flex-flow: column;
}

.traialsTitle,
.encounterProbabilityTitle {
  font-size: 1em;
}

.encounterProbability,
.traials,
.shinyProbability {
  /* `遭遇する確率`の文字列がはみ出ないように調整 */
  width: 70vh;
  max-width: 90vw;
  position: relative;
  box-sizing: border-box;
  background-color: rgba(0, 0, 0, 0.65);
  padding: 0.7em;
  border-radius: 0.5em;
  font-size: 0.7em;
}

.traialsInput,
.traialsInputButton,
.shinyProbabilityInput {
  font-size: 1.5em;
}

.encounterProbability,
.traials,
.shinyProbability,
.traialsInput,
.shinyProbabilityInput {
  text-align: center;
  margin: 0.3em auto;
}

.traialsInput,
.shinyProbabilityInput {
  /*
    70vhは.encounterProbabilityのvhに合わせる
    9桁の数字が入る大きさにしておく必要がある
    ボタンの数で割る数を決める
  */
  width: 9em;
  max-width: 70vw;
  height: 1.5em;
}

.traialsInput,
.shinyProbabilityInput,
.traialsInputButton {
  color: #fff;
  background-color: rgba(33, 33, 33, 0.65);
  border: none;
}

.traialsInput,
.shinyProbabilityInput {
  border-radius: 0.5em;
}

.traialsInputButton {
  /*
    `- (1vh / 3) * 4`は、marginの値
    ある程度大きくないと押しづらい
  */
  width: calc((60vh / 2) - (1vh / 3) * 4);
  max-width: 60vw;
  height: 1.75em;
  /* iOS対応用のコード: 標準のCSSを剥がす */
  -webkit-appearance: none;
  appearance: none;

  position: relative;
  box-shadow: 0 0 0 calc(1vh / 3) #fff inset;
  border-radius: 1.2em;
  margin: 0.1em auto;
}

.traialsInput:focus,
.shinyProbabilityInput:focus,
.traialsInputButton:focus {
  /* iOS対応用のコード: 標準のCSSを剥がす */
  -webkit-appearance: none;
  appearance: none;

  outline: 0;
  /* height:300px時の1pxに相当 */
  box-shadow: 0 0 0 calc((1vh / 3) * 1.25) rgb(33, 150, 243) inset;
}

.traialsInput:active,
.shinyProbabilityInput:active,
.traialsInputButton:active {
  /* height:300px時の1pxに相当 */
  filter: drop-shadow(0px 0px calc(1vh / 3) rgba(33, 150, 243, 0.6));
}

/*
  スピンボタンを無効
*/
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

hr {
  width: 80%;
  margin: 0.1em auto;
  /*
    border:noneでborder情報を上書き
    height:300px時の1pxに相当
  */
  border: none;
  border-bottom: solid calc(1vh / 3) #fff;
}

.encounterProbabilityTitle {
  margin: 0.5em;
}

/* `encounterProbabilityTitle`はクラスとidで別もの */
#encounterProbabilityTitle {
  font-size: 2.2em;
}

select > option {
  color: inherit;
  text-align: inherit;
  font-size: 1em;
}

details {
  /* 謎の空白があるのでマイナスマージン（やり方他にあるはず） */
  margin-bottom: -1em;
}

.calcOption,
#checkboxs {
  font-size: 0.8em;
  text-align: left;
  border: none;
}

.calcOptionLabel,
#checkboxs > fieldset > label {
  font-weight: 400;
}

.btn,
.dropdown-menu,
.dropdown-item,
#generationSelector {
  font-size: 0.8em;
  text-align: center;
  height: 2.5em;
  border: none;
  border-radius: 0.5em;
  color: #fff;
  background-color: rgba(33, 33, 33, 0.65);
}

#generationSelector:focus {
  /* chromeの標準CSSを剥がす */
  outline: none;
  /* height:300px時の1pxに相当 */
  box-shadow: 0 0 0 calc((1vh / 3) * 1.25) rgb(33, 150, 243) inset;
}

.encounterProbabilityNum {
  margin-top: 0.5em;
}

.calcOptionLabel,
.genLabel {
  display: block;
}

.calcOption,
.genFieldset {
  margin: 5px 0;
  padding: 2px 10px 10px 10px;
  border: 1px dashed #777;
}

#calcProbabilityButton {
  /* iOS対応用のコード: 標準のCSSを剥がす */
  -webkit-appearance: none;
  appearance: none;

  position: relative;
  box-shadow: 0 0 0 calc(1vh / 3) #fff inset;
  border-radius: 1.5em;
  /* height:300px時の1pxに相当 */
  margin: calc(1vh / 3);
  color: inherit;
  font-size: 0.6em;
  font-weight: 700;
  background-color: rgba(33, 33, 33, 0.65);
  border: none;
  padding: 1em;
  margin: auto;
}

#calcProbabilityButton:focus {
  /* iOS対応用のコード: 標準のCSSを剥がす */
  -webkit-appearance: none;
  appearance: none;

  outline: 0;
  /* height:300px時の1pxに相当 */
  box-shadow: 0 0 0 calc((1vh / 3) * 1.25) rgb(33, 150, 243) inset;
}

#calcProbabilityButton:active {
  filter: drop-shadow(0px 0px calc(1vh / 3) rgba(33, 150, 243, 0.6));
}

.btn {
  height: inherit;
  margin: 1em auto;
}

.btn:focus{
  box-shadow: 0 0 0 calc((1vh / 3) * 1.25) rgb(33, 150, 243) inset;
}

.btn:active,
.btn:hover {
  background-color: rgba(33, 33, 33, 0.65);
  color: #fff;
}
.show>.btn-light.dropdown-toggle {
  background-color: rgba(33, 33, 33, 0.65);
  color: inherit;
}
.bootstrap-select > select.mobile-device:focus + .dropdown-toggle, .bootstrap-select .dropdown-toggle:focus {
  outline: 0 !important;
}

.dropdown-menu {
  background-color: rgba(33, 33, 33, 0.65);
}

.dropdown-menu,
.show {
  padding: 0em;
  border-radius: 0.5em;
}

.dropdown-item {
  border-bottom: solid 0.1px rgba(255, 255, 255, 0.1);
  border-radius: 0em;
  font-size: 1em;
}

.inner::-webkit-scrollbar {
  display: none;
}

button, input, optgroup, select, textarea{
  line-height: initial;
}

legend{
  font-size: inherit;
}

label {
  margin: 0;
}

/*
  スマホ用
  iPhone12Pro
*/
body {
  /* height:300pxで16pxと同等。 */
  font-size: calc((16 / 300) * 100svh);
}

.traialsTitle,
.encounterProbabilityTitle {
  font-size: 1em;
}

.encounterProbability,
.traials,
.shinyProbability {
  /* `遭遇する確率`の文字列がはみ出ないように調整 */
  width: 70svh;
  max-width: 90vw;
  font-size: 0.6em;
}

.traialsInput,
.traialsInputButton,
.shinyProbabilityInput {
  font-size: 1.6em;
}

.traialsInput,
.shinyProbabilityInput {
  /*
    70vhは.encounterProbabilityのvhに合わせる
    9桁の数字が入る大きさにしておく必要がある
    ボタンの数で割る数を決める
  */
  width: calc(70svh / 2);
  max-width: 70dvw;
}

.traialsInputButton {
  /*
    `- (1vh / 3) * 4`は、marginの値
    ある程度大きくないと押しづらい
  */
  width: calc((60svh / 2) - (1svh / 3) * 4);
  max-width: 60dvw;
  /* height:300px時の1pxに相当 */
  box-shadow: 0 0 0 calc(1svh / 3) #fff inset;
  margin: 0.1em auto;
}

.traialsInput:focus,
.shinyProbabilityInput:focus,
.traialsInputButton:focus {
  /* height:300px時の1pxに相当 */
  box-shadow: 0 0 0 calc((1svh / 3) * 1.25) rgb(33, 150, 243) inset;
}

.traialsInput:active,
.shinyProbabilityInput:active,
.traialsInputButton:active {
  /* height:300px時の1pxに相当 */
  filter: drop-shadow(0px 0px calc(1svh / 3) rgba(33, 150, 243, 0.6));
}

hr {
  /*
    border:noneでborder情報を上書き
    height:300px時の1pxに相当
  */
  border-bottom: solid calc(1svh / 3) #fff;
}

/* `encounterProbabilityTitle`はクラスとidで別もの */
#encounterProbabilityTitle {
  font-size: 1.6em;
}

/*
  OBS用
  OBSは`vh`や`dvw`に対応していないため、`vh`や`vw`に置き換える必要がある
*/
@media screen and (aspect-ratio: 7/10) {
  body {
    /* height:300pxで16pxと同等。 */
    font-size: calc((16 / 300) * 100vh);
  }

  .encounterProbability,
  .traials,
  .shinyProbability {
    /* `遭遇する確率`の文字列がはみ出ないように調整 */
    width: 70vh;
    max-width: 90vw;
  }

  .traialsInput,
  .shinyProbabilityInput {
    /*
      70vhは.encounterProbabilityのvhに合わせる
      9桁の数字が入る大きさにしておく必要がある
      ボタンの数で割る数を決める
    */
    width: calc(70vh / 2);
    max-width: 70vw;
  }

  .traialsInputButton {
    /*
      `- (1vh / 3) * 4`は、marginの値
      ある程度大きくないと押しづらい
    */
    width: calc((60vh / 2) - (1vh / 3) * 4);
    max-width: 60vw;
    box-shadow: 0 0 0 calc(1vh / 3) #fff inset;
    /* height:300px時の1pxに相当 */
    margin: calc(1vh / 3) auto;
  }

  .traialsInput:focus,
  .shinyProbabilityInput:focus,
  .traialsInputButton:focus {
    /* height:300px時の1pxに相当 */
    box-shadow: 0 0 0 calc((1vh / 3) * 1.25) rgb(33, 150, 243) inset;
  }
  .traialsInput:active,
  .shinyProbabilityInput:active,
  .traialsInputButton:active {
    /* height:300px時の1pxに相当 */
    filter: drop-shadow(0px 0px calc(1vh / 3) rgba(33, 150, 243, 0.6));
  }

  hr {
    /*
      border:noneでborder情報を上書き
      height:300px時の1pxに相当
    */
    border-bottom: solid calc(1vh / 3) #fff;
  }
}
